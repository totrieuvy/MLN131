import React, { useEffect, useState, useRef } from "react";
// eslint-disable-next-line no-unused-vars
import { motion } from "framer-motion";
import "./Factor.scss";

const Factor = () => {
  const [speakingIndex, setSpeakingIndex] = useState(null);
  const [, setVoices] = useState([]);
  const bestVoiceRef = useRef(null);

  // C√°c ·∫£nh ƒë√£ ch·ªçn (public) ph√π h·ª£p n·ªôi dung
  const factors = [
    {
      title: "L√£nh th·ªï chung",
      text: 'ƒê√¢y kh√¥ng ch·ªâ l√† kh√¥ng gian ƒë·ªãa l√Ω m√† c√≤n l√† "kh√¥ng gian sinh t·ªìn" c·ªßa d√¢n t·ªôc, bao g·ªìm v√πng ƒë·∫•t, v√πng tr·ªùi, v√πng bi·ªÉn thu·ªôc ch·ªß quy·ªÅn qu·ªëc gia. L√£nh th·ªï l√† c∆° s·ªü v·∫≠t ch·∫•t cho c√°c ho·∫°t ƒë·ªông kinh t·∫ø, vƒÉn h√≥a, x√£ h·ªôi v√† l√† y·∫øu t·ªë thi√™ng li√™ng g·∫Øn v·ªõi kh√°i ni·ªám "T·ªï qu·ªëc". Vi·ªác x√°c l·∫≠p v√† b·∫£o v·ªá ch·ªß quy·ªÅn l√£nh th·ªï l√† nghƒ©a v·ª• v√† tr√°ch nhi·ªám cao nh·∫•t c·ªßa m·ªói th√†nh vi√™n trong d√¢n t·ªôc.',
      img: "https://media.istockphoto.com/id/1455958730/vi/vec-to/gi%C3%A1m-s%C3%A1t-v%C3%A0-ph%C3%A2n-t%C3%ADch-d%E1%BB%AF-li%E1%BB%87u-tr%C3%AAn-m%C3%A1y-t%C3%ADnh-%C4%91%E1%BB%83-b%C3%A0n-nh%E1%BB%AFng-ng%C6%B0%E1%BB%9Di-nh%E1%BB%8F-b%C3%A9-v%E1%BB%9Bi-%C4%91%E1%BB%93-th%E1%BB%8B-nghi%C3%AAn-c%E1%BB%A9u.jpg?s=612x612&w=0&k=20&c=tcmfzeeTFDOxCyDY9LzR6HckAM21uBcb9EYPZBCF8Pw=",
    },
    {
      title: "Ng√¥n ng·ªØ chung",
      text: "Ng√¥n ng·ªØ l√† c√¥ng c·ª• giao ti·∫øp th·ªëng nh·∫•t, gi√∫p li√™n k·∫øt c√°c th√†nh vi√™n trong c·ªông ƒë·ªìng tr√™n m·ªçi lƒ©nh v·ª±c. N√≥ kh√¥ng ch·ªâ truy·ªÅn t·∫£i th√¥ng tin m√† c√≤n l√† ph∆∞∆°ng ti·ªán l∆∞u gi·ªØ, truy·ªÅn b√° vƒÉn h√≥a, l·ªãch s·ª≠, v√† t·∫°o n√™n s·ª± ƒë·ªìng nh·∫•t v·ªÅ t∆∞ t∆∞·ªüng, t√¨nh c·∫£m. Trong m·ªôt qu·ªëc gia ƒëa t·ªôc ng∆∞·ªùi, th∆∞·ªùng s·∫Ω c√≥ m·ªôt ng√¥n ng·ªØ chung ƒë·ªÉ giao ti·∫øp v√† qu·∫£n l√Ω.",
      img: "https://cdn.nhandan.vn/images/90226d43541fe3e6433eed17cac8f63a2dc3784b3fb5ccc593be5348d47b44da376c3f16f3bc8cf0299f2ec17cc2b51c/sgggg-4734.jpg",
    },
    {
      title: "ƒê·ªùi s·ªëng kinh t·∫ø chung",
      text: "ƒê√¢y l√† y·∫øu t·ªë ƒë∆∞·ª£c xem l√† quan tr·ªçng nh·∫•t, l√† n·ªÅn t·∫£ng v·∫≠t ch·∫•t v·ªØng ch·∫Øc c·ªßa c·ªông ƒë·ªìng d√¢n t·ªôc. M·ªôt n·ªÅn kinh t·∫ø th·ªëng nh·∫•t, v·ªõi s·ª± ph√¢n c√¥ng lao ƒë·ªông v√† trao ƒë·ªïi gi·ªØa c√°c v√πng, c√°c ng√†nh, s·∫Ω t·∫°o ra c√°c m·ªëi li√™n h·ªá kinh t·∫ø ch·∫∑t ch·∫Ω, g·∫Øn k·∫øt c√°c th√†nh vi√™n v√† c√°c b·ªô ph·∫≠n c·ªßa d√¢n t·ªôc l·∫°i v·ªõi nhau, ƒë·∫£m b·∫£o t√≠nh ·ªïn ƒë·ªãnh v√† b·ªÅn v·ªØng cho to√†n b·ªô c·ªông ƒë·ªìng.",
      img: "https://hungyen.dcs.vn/ckfinder/userfiles/files/9_lenin_12_acting_man_yofs.jpg",
    },
    {
      title: "B·∫£n s·∫Øc vƒÉn h√≥a v√† √Ω th·ª©c t·ª± gi√°c d√¢n t·ªôc",
      text: "Y·∫øu t·ªë n√†y bao g·ªìm to√†n b·ªô c√°c gi√° tr·ªã vƒÉn h√≥a v·∫≠t ch·∫•t v√† tinh th·∫ßn nh∆∞ phong t·ª•c, t·∫≠p qu√°n, t√≠n ng∆∞·ª°ng, ngh·ªá thu·∫≠t, c√πng v·ªõi t√¢m l√Ω, t√≠nh c√°ch ƒë·∫∑c th√π ƒë∆∞·ª£c h√¨nh th√†nh qua h√†ng ng√†n nƒÉm l·ªãch s·ª≠. ƒêi c√πng v·ªõi ƒë√≥ l√† √Ω th·ª©c t·ª± gi√°c, t·ª©c l√† s·ª± t·ª± nh·∫≠n th·ª©c v·ªÅ s·ª± th·ªëng nh·∫•t c·ªßa c·ªông ƒë·ªìng m√¨nh, v·ªÅ ngu·ªìn g·ªëc v√† b·∫£n s·∫Øc ri√™ng, gi√∫p ph√¢n bi·ªát d√¢n t·ªôc n√†y v·ªõi d√¢n t·ªôc kh√°c v√† t·∫°o n√™n s·ª©c m·∫°nh tinh th·∫ßn to l·ªõn.",
      img: "https://maisonoffice.vn/wp-content/uploads/2023/11/1-ban-do-the-gioi-va-cac-chau-luc-moi-nhat-hien-nay.jpg",
    },
  ];

  // T√¨m ch·ªçn gi·ªçng ti·∫øng Vi·ªát "t·ªët nh·∫•t" tr√™n tr√¨nh duy·ªát
  useEffect(() => {
    const setAllVoices = () => {
      const available = window.speechSynthesis.getVoices() || [];
      setVoices(available);

      // ∆Øu ti√™n: lang b·∫Øt ƒë·∫ßu b·∫±ng 'vi' ho·∫∑c ch·ª©a 'Vietnam', sau ƒë√≥ ∆∞u ti√™n name c√≥ 'Google' ho·∫∑c 'vi-VN'
      const candidates = available.filter((v) => {
        if (!v.lang) return false;
        return v.lang.toLowerCase().startsWith("vi") || v.lang.toLowerCase().includes("vietnam");
      });

      // N·∫øu c√≥ candidates, ch·ªçn voice c√≥ "Google" trong t√™n ho·∫∑c fallback l√† first candidate
      if (candidates.length > 0) {
        const googleCandidate = candidates.find((v) => v.name && /google/i.test(v.name)) || candidates[0];
        bestVoiceRef.current = googleCandidate;
      } else {
        // fallback: ch·ªçn voice c√≥ 'vn' ho·∫∑c first available
        const fallback = available.find((v) => v.lang && v.lang.toLowerCase().includes("vn")) || available[0] || null;
        bestVoiceRef.current = fallback;
      }
    };

    // Trong nhi·ªÅu tr√¨nh duy·ªát voices load b·∫•t ƒë·ªìng b·ªô => l·∫Øng nghe event
    setAllVoices();
    window.speechSynthesis.onvoiceschanged = () => {
      setAllVoices();
    };

    return () => {
      window.speechSynthesis.onvoiceschanged = null;
    };
  }, []);

  const handleSpeak = (text, index) => {
    // D·ª´ng n·∫øu ƒëang ƒë·ªçc c√πng ƒëo·∫°n -> cancel
    if (speakingIndex === index) {
      window.speechSynthesis.cancel();
      setSpeakingIndex(null);
      return;
    }

    if ("speechSynthesis" in window) {
      window.speechSynthesis.cancel();

      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = "vi-VN"; // c·ªë ƒë·∫∑t ng√¥n ng·ªØ
      // g√°n voice n·∫øu c√≥ ch·ªçn
      if (bestVoiceRef.current) {
        utterance.voice = bestVoiceRef.current;
      }

      // ƒëi·ªÅu ch·ªânh t·ªâ l·ªá/pitch n·∫øu c·∫ßn
      utterance.rate = 0.95; // h∆°i ch·∫≠m ƒë·ªÉ r√µ ti·∫øng
      utterance.pitch = 1;

      utterance.onstart = () => {
        setSpeakingIndex(index);
      };
      utterance.onend = () => {
        setSpeakingIndex(null);
      };
      utterance.onerror = () => {
        setSpeakingIndex(null);
        alert("C√≥ l·ªói khi ph√°t √¢m. B·∫°n c√≥ th·ªÉ th·ª≠ tr√¨nh duy·ªát kh√°c.");
      };

      window.speechSynthesis.speak(utterance);
    } else {
      alert(
        "Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ Speech Synthesis. N·∫øu mu·ªën ch·∫•t l∆∞·ª£ng TTS t·ªët h∆°n, c√¢n nh·∫Øc d√πng Google Cloud TTS (ph·∫£i c·∫•u h√¨nh API key)."
      );
    }
  };

  return (
    <div className="factor">
      <section className="factor__intro">
        <motion.h1 initial={{ opacity: 0, y: 30 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.9 }}>
          ƒêi·ªÅu g√¨ quy·∫øt ƒë·ªãnh s·ª± t·ªìn t·∫°i c·ªßa m·ªôt d√¢n t·ªôc?
        </motion.h1>

        <motion.p
          className="factor__subtitle"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.4 }}
        >
          (Nh·∫•n n√∫t üîä ƒë·ªÉ nghe ph·∫ßn t∆∞∆°ng ·ª©ng)
        </motion.p>
      </section>

      {factors.map((f, i) => (
        <motion.section
          key={i}
          className={`factor__block ${i % 2 === 0 ? "left" : "right"}`}
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ duration: 0.7, delay: i * 0.15 }}
        >
          <div className="factor__text">
            <h2>{f.title}</h2>
            <p>{f.text}</p>
            <div className="factor__controls">
              <button
                className={`factor__speak ${speakingIndex === i ? "speaking" : ""}`}
                onClick={() => handleSpeak(f.text, i)}
              >
                {speakingIndex === i ? "ƒêang ƒë·ªçc... (Nh·∫•n ƒë·ªÉ d·ª´ng)" : "üîä Nghe ƒë·ªçc"}
              </button>
              <small className="voice-note">
                {bestVoiceRef.current ? `Voice: ${bestVoiceRef.current.name}` : "Voice: (m·∫∑c ƒë·ªãnh tr√¨nh duy·ªát)"}
              </small>
            </div>
          </div>

          <div className="factor__media">
            <img src={f.img} alt={f.title} />
          </div>
        </motion.section>
      ))}
    </div>
  );
};

export default Factor;
